# -*- coding: utf-8 -*-
"""validating_files_pandas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qkB6o7dH8QQr6hrvDZDIdPlOjVYQfRfu
"""

import pandas as pd
import os


def main(file_path, header_names, delimiter, expected_num_columns):
    file_present = check_file_exists(file_path)
    if not file_present:
        print("File not found")
        return False

    # Read the CSV file into a pandas DataFrame
    df = pd.read_csv(file_path, delimiter=delimiter,header=None)
    header_check = check_file_header(df,header_names)
    if not header_check:
        return False

    num_columns = check_file_columns(df, expected_num_columns)
    if num_columns:
        print("File is valid")
        return True
    else:
        print("Expected number of columns and actual number of columns in file do not match")
        return False


def check_file_exists(file_path):
    if os.path.isfile(file_path):
        return True
    else:
        return False
def check_file_header(df, header_names):
    has_header = False
    if header_names is None or len(header_names.strip()) == 0:
        has_header = False
    else:
        has_header = True

    #is_header = not all(str(val).isdigit() for val in df.iloc[0].values)
    #is_header = not df.iloc[0].apply(lambda x: str(x).isdigit()).all()
    is_header = df.iloc[0].apply(lambda x: any(c.isalpha() for c in str(x))).any() # Checking if 1st row contains any alphabet or not
    #is_header = not df.iloc[0].apply(lambda x: str(x).replace('.', '').replace('-', '').isdigit()).all()
    #print(is_header)
    if is_header and has_header:
        print("File already has header")
    elif not is_header and not has_header:
        print("File doesn't have any header")
    elif is_header != has_header:
        return True
    else:
        return False



def check_file_columns(df, expected_num_columns):
    num_columns = len(df.columns)
    if num_columns == expected_num_columns:
        return True
    else:
        return False

main('/content/X_FAM.txt',header_names=" ",delimiter='\t',expected_num_columns=31)